# This is a basic workflow to help you get started with Actions

name: Mael Workflows Build and Tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  symfony:
    name: Symfony 5.0 (PHP ${{ matrix.php-version }})
    runs-on: [ubuntu-latest]
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
        ports: 
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: true
      matrix:
        php-version: ['7.3', '7.4']
    steps:
    # Setup Github Actions
      - name: SetUp Github Actions
        uses: actions/checkout@v2
      # SetUp PHP
      - name: SetpUp PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo
        env: 
          update: true
      # Setpup composer and dependencies
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --no-progress --no-suggest
      # SetpUp Symfony
      - name: Check Symfony requirements
        run: vendor/bin/requirements-checker
      - name: Check the Symfony console
        run: |
          php bin/console -V
          php bin/console strangebuzz:version
      # Make tests
      - name: Load Doctrine fixtures
        run: |
          make load-fixtures
      - name: Run functionnal and unit tests
        run: |
          cp phpunit.xml.ci phpunit.xml phpunit.xml.dist
          make test
